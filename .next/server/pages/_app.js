(() => {
var exports = {};
exports.id = 888;
exports.ids = [888];
exports.modules = {

/***/ 5630:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ _app)
});

// EXTERNAL MODULE: external "react/jsx-runtime"
var jsx_runtime_ = __webpack_require__(997);
// EXTERNAL MODULE: external "react-redux"
var external_react_redux_ = __webpack_require__(6022);
// EXTERNAL MODULE: external "@reduxjs/toolkit"
var toolkit_ = __webpack_require__(5184);
;// CONCATENATED MODULE: ./src/store/slice/counterSlice.ts

const initialState = {
    value: 0
};
const counterSlice = (0,toolkit_.createSlice)({
    name: 'counter',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions.
    // In this example, 'increment', 'decrement' and 'incrementByAmount' are actions. They can be triggered from outside this slice, anywhere in the app.
    // So for example, if we make a dispatch to the 'increment' action here from the index page, it will get triggered and change the value of the state from 0 to 1.
    reducers: {
        increment: (state)=>{
            // Redux Toolkit allows us to write "mutating" logic in reducers.
            // It doesn't actually mutate the state because it uses the Immer library, which detects changes to a "draft state" and produces a brand new immutable state based off those changes
            state.value++;
        },
        decrement: (state)=>{
            state.value--;
        },
        // 'The increment by amount' action here, has one job and that is to take whatever value is passed to it and add that to state.value.
        // The PayloadAction type here is used to declare the contents of `action.payload`
        incrementByAmount: (state, action)=>{
            state.value += action.payload;
        }
    }
});
// Here we are just exporting the actions from this slice, so that we can call them anywhere in our app.
const { increment , decrement , incrementByAmount ,  } = counterSlice.actions;
// calling the above actions would be useless if we could not access the data in the state. So, we use something called a selector which allows us to select a value from the state.
const selectCount = (state)=>state.counter.value
;
// exporting the reducer here, as we need to add this to the store
/* harmony default export */ const slice_counterSlice = (counterSlice.reducer);

;// CONCATENATED MODULE: external "axios"
const external_axios_namespaceObject = require("axios");
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_namespaceObject);
;// CONCATENATED MODULE: ./src/store/slice/kanyeSlice.ts


const kanyeSlice_initialState = {
    data: {
        quote: 'click that button'
    },
    pending: false,
    error: false
};
// This action is what we will call using the dispatch in order to trigger the API call.
const getKanyeQuote = (0,toolkit_.createAsyncThunk)('kanye/kanyeQuote', async ()=>{
    const response = await external_axios_default().get('https://api.kanye.rest/');
    return response.data;
});
const kanyeSlice = (0,toolkit_.createSlice)({
    name: 'kanye',
    initialState: kanyeSlice_initialState,
    reducers: {
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere, including actions generated by createAsyncThunk or in other slices.
    // Since this is an API call we have 3 possible outcomes: pending, fulfilled and rejected. We have made allocations for all 3 outcomes.
    // Doing this is good practice as we can tap into the status of the API call and give our users an idea of what's happening in the background.
    extraReducers: (builder)=>{
        builder.addCase(getKanyeQuote.pending, (state)=>{
            state.pending = true;
        }).addCase(getKanyeQuote.fulfilled, (state, { payload  })=>{
            // When the API call is successful and we get some data,the data becomes the `fulfilled` action payload
            state.pending = false;
            state.data = payload;
        }).addCase(getKanyeQuote.rejected, (state)=>{
            state.pending = false;
            state.error = true;
        });
    }
});
const selectKanye = (state)=>state.kanyeQuote
;
/* harmony default export */ const slice_kanyeSlice = (kanyeSlice.reducer);

// EXTERNAL MODULE: ./src/store/slice/medalSlice.ts
var medalSlice = __webpack_require__(4289);
// EXTERNAL MODULE: ./src/store/slice/resultsSlice.ts
var resultsSlice = __webpack_require__(8240);
// EXTERNAL MODULE: ./src/store/slice/protocolSlice.ts
var protocolSlice = __webpack_require__(7749);
// EXTERNAL MODULE: ./src/store/slice/loginSlice.ts
var loginSlice = __webpack_require__(4234);
;// CONCATENATED MODULE: ./src/store/store.ts







const store = (0,toolkit_.configureStore)({
    reducer: {
        counter: slice_counterSlice,
        kanyeQuote: slice_kanyeSlice,
        medal: medalSlice/* default */.ZP,
        results: resultsSlice/* default */.ZP,
        protocol: protocolSlice/* default */.ZP,
        loginModal: loginSlice/* default */.ZP
    }
});

// EXTERNAL MODULE: ./node_modules/antd/dist/antd.css
var antd = __webpack_require__(4722);
;// CONCATENATED MODULE: ./pages/_app.tsx





function MyApp({ Component , pageProps  }) {
    return /*#__PURE__*/ jsx_runtime_.jsx(external_react_redux_.Provider, {
        store: store,
        children: /*#__PURE__*/ jsx_runtime_.jsx(Component, {
            ...pageProps
        })
    });
}
/* harmony default export */ const _app = (MyApp);


/***/ }),

/***/ 4234:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h7": () => (/* binding */ openModal),
/* harmony export */   "Mr": () => (/* binding */ closeModal),
/* harmony export */   "Eu": () => (/* binding */ selectOnOpen),
/* harmony export */   "ZP": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* unused harmony export loginSlice */
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5184);
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

const initialState = {
    onOpen: false
};
const loginSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
    name: 'protocol',
    initialState,
    reducers: {
        openModal: (state)=>{
            state.onOpen = true;
        },
        closeModal: (state)=>{
            state.onOpen = false;
        }
    }
});
const { openModal , closeModal ,  } = loginSlice.actions;
const selectOnOpen = (state)=>state.loginModal.onOpen
;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loginSlice.reducer);


/***/ }),

/***/ 4722:
/***/ (() => {



/***/ }),

/***/ 5184:
/***/ ((module) => {

"use strict";
module.exports = require("@reduxjs/toolkit");

/***/ }),

/***/ 6022:
/***/ ((module) => {

"use strict";
module.exports = require("react-redux");

/***/ }),

/***/ 997:
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, [289,240,749], () => (__webpack_exec__(5630)));
module.exports = __webpack_exports__;

})();